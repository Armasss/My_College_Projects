/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package package1;

import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author markr
 */
public class Modify_rec extends javax.swing.JFrame {

    boolean search = true;
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    String ogPass;
    private static final String REGEX = "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])";

    /**
     * Creates new form Modify_rec
     */
    public Modify_rec() {
        initComponents();
        Connect();
        JTextFieldDateEditor editor = (JTextFieldDateEditor) birthday.getDateEditor();
        editor.setEditable(false);
        userFirstName.setEnabled(false);
        userMiddleName.setEnabled(false);
        userLastName.setEnabled(false);
        userAddress.setEnabled(false);
        userMobile.setEnabled(false);
        userEmail.setEnabled(false);
        userPass.setEnabled(false);
        confirmPass_label.setEnabled(false);
        userConfirmpass.setEnabled(false);
        delete_button.setEnabled(false);
        update_button.setEnabled(false);
        ckbox.setEnabled(false);
        changePass.setEnabled(false);
        birthday.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        userAddress = new javax.swing.JTextField();
        update_button = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        userPass = new javax.swing.JPasswordField();
        userMobile = new javax.swing.JTextField();
        userConfirmpass = new javax.swing.JPasswordField();
        login_label = new javax.swing.JLabel();
        userFirstName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        userMiddleName = new javax.swing.JTextField();
        userEmail = new javax.swing.JTextField();
        searchID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        confirmPass_label = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        userLastName = new javax.swing.JTextField();
        delete_button = new javax.swing.JButton();
        exit_button = new javax.swing.JButton();
        ckbox = new javax.swing.JCheckBox();
        changePass = new javax.swing.JCheckBox();
        search_button = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        birthday = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel11.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jLabel11.setText("Address:");

        update_button.setBackground(new java.awt.Color(0, 51, 51));
        update_button.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        update_button.setForeground(new java.awt.Color(255, 255, 255));
        update_button.setText("UPDATE");
        update_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        update_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update_button.setFocusPainted(false);
        update_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                update_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                update_buttonMouseExited(evt);
            }
        });
        update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_buttonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jLabel5.setText("Mobile No.: 09xxxxxxxxxx (11 digit)");

        login_label.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        login_label.setForeground(new java.awt.Color(0, 51, 51));
        login_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_label.setText("MODIFY RECORD");

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jLabel6.setText("Email:");

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jLabel1.setText("ID:");

        searchID.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        searchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchIDActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jLabel7.setText("Password:");

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jLabel2.setText("First Name:");

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jLabel3.setText("Middle Name:");

        confirmPass_label.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        confirmPass_label.setText("Confirm Password:");

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jLabel4.setText("Last Name:");

        delete_button.setBackground(new java.awt.Color(0, 51, 51));
        delete_button.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        delete_button.setForeground(new java.awt.Color(255, 255, 255));
        delete_button.setText("DELETE");
        delete_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        delete_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete_button.setFocusPainted(false);
        delete_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                delete_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                delete_buttonMouseExited(evt);
            }
        });
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });

        exit_button.setBackground(new java.awt.Color(0, 51, 51));
        exit_button.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        exit_button.setForeground(new java.awt.Color(255, 255, 255));
        exit_button.setText("EXIT");
        exit_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        exit_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit_button.setFocusPainted(false);
        exit_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exit_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exit_buttonMouseExited(evt);
            }
        });
        exit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_buttonActionPerformed(evt);
            }
        });

        ckbox.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        ckbox.setText("View Password");
        ckbox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckboxActionPerformed(evt);
            }
        });

        changePass.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        changePass.setText("Change Password");
        changePass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        changePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePassActionPerformed(evt);
            }
        });

        search_button.setBackground(new java.awt.Color(0, 51, 51));
        search_button.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        search_button.setForeground(new java.awt.Color(255, 255, 255));
        search_button.setText("SEARCH");
        search_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        search_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search_button.setFocusPainted(false);
        search_button.setFocusable(false);
        search_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                search_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                search_buttonMouseExited(evt);
            }
        });
        search_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_buttonActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jLabel12.setText("Birthday");

        birthday.setFocusable(false);
        birthday.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(login_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchID, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(userMiddleName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userLastName, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(userAddress, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(ckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(changePass))
                                .addComponent(delete_button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                .addComponent(userMobile, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                .addComponent(userPass, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                .addComponent(search_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 21, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(update_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(userConfirmpass)
                            .addComponent(confirmPass_label, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                            .addComponent(userEmail)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(exit_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(birthday, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(login_label)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(birthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(userMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(confirmPass_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userConfirmpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbox)
                    .addComponent(changePass))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(update_button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(search_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete_button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exit_button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public void Connect() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/isdb", "root", "1234");

        } catch (ClassNotFoundException ex) {

        } catch (SQLException ex) {

        }
    }

    private boolean checkID(String ID) {
        try {
            Integer.valueOf(ID);
            return true;
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Invalid ID", "Error", JOptionPane.ERROR_MESSAGE);
            searchID.setText("");
            return false;
        }
    }

    private void exit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_buttonActionPerformed
        Menu main = new Menu();
        main.setVisible(true);
        dispose();
    }//GEN-LAST:event_exit_buttonActionPerformed
    private boolean passwordChecker(String password) {
        if (password == null || password.isEmpty()) {
            JOptionPane.showMessageDialog(null, "password cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        //password length
        if (password.length() < 8 || password.length() > 20) {
            JOptionPane.showMessageDialog(null, "password must be between 8 to 20 characters", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (!Pattern.compile("[a-z]").matcher(password).find()) {
            JOptionPane.showMessageDialog(null, "Password must contain at least one lower case", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (!Pattern.compile("[A-Z]").matcher(password).find()) {
            JOptionPane.showMessageDialog(null, "Password must contain at least one upper case", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (!Pattern.compile("[0-9]").matcher(password).find()) {
            JOptionPane.showMessageDialog(null, "Password must contain at least one digit", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (!Pattern.compile("[,.;:'|~`/!@#$%&*()_+=|<>?-]").matcher(password).find()) {
            JOptionPane.showMessageDialog(null, "Password must contain at least one symbol", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    public static boolean isValidEmail(String email) {
        Pattern pattern = Pattern.compile(REGEX);
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }

    private void resetModFrame() {
        searchID.setEnabled(true);
        searchID.setText("");
        userFirstName.setText("");
        userFirstName.setEnabled(false);
        userMiddleName.setText("");
        userMiddleName.setEnabled(false);
        userLastName.setText("");
        userLastName.setEnabled(false);
        userAddress.setText("");
        userAddress.setEnabled(false);
        ((JTextField) birthday.getDateEditor().getUiComponent()).setText("");
        birthday.setEnabled(false);
        userMobile.setText("");
        userMobile.setEnabled(false);
        userEmail.setText("");
        userEmail.setEnabled(false);
        userPass.setText("");
        userPass.setEnabled(false);
        delete_button.setEnabled(false);
        update_button.setEnabled(false);
        search_button.setEnabled(true);
        ogPass = "";
        ckbox.setEnabled(false);
        changePass.setEnabled(false);
    }

    private boolean confirmPassword(String password) {
        String confirmPass = userPass.getText();
        return confirmPass.equals(password);
    }

    private boolean numChecker(String mobileNumber) {
        String regex = "^\\d{11}$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(mobileNumber);
        return matcher.matches();
    }
    private void update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_buttonActionPerformed
        // TODO add your handling code here:
        int answer;
        String bd;
        answer = JOptionPane.showConfirmDialog(null, "Are you sure you want to update this record?", "System Message", JOptionPane.YES_NO_OPTION);
        if (answer == JOptionPane.YES_OPTION) {

            try {
                delete_button.setEnabled(false);
                Connection cn;
                Statement st;
                String url;
                url = "jdbc:mysql://localhost:3306/isdb";
                Class.forName("com.mysql.cj.jdbc.Driver");
                cn = (Connection) DriverManager.getConnection(url, "root", "1234");
                st = (Statement) cn.createStatement();

                if (userFirstName.getText().equals("") || userMiddleName.getText().equals("") || userLastName.getText().equals("") || userAddress.getText().equals("") || userMobile.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Data fields cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
                } else if (numChecker(userMobile.getText()) == false) {
                    JOptionPane.showMessageDialog(null, "Invalid Mobile number", "Error", JOptionPane.ERROR_MESSAGE);
                    userMobile.setText(null);

                } else if (isValidEmail(userEmail.getText()) == false) {

                    JOptionPane.showMessageDialog(null, "Invalid email address", "Error", JOptionPane.ERROR_MESSAGE);
                    userEmail.setText(null);
                } else {
                    if (changePass.isSelected()) {
                        if (passwordChecker(userPass.getText()) == false) {
                            userPass.setText(null);
                            userConfirmpass.setText(null);
                        } else if (confirmPassword(userConfirmpass.getText()) == false) {
                            JOptionPane.showMessageDialog(null, "Password does not match", "Error", JOptionPane.ERROR_MESSAGE);
                            userPass.setText(null);
                            userConfirmpass.setText(null);
                        } else {
                            bd  = ((JTextField)birthday.getDateEditor().getUiComponent()).getText();
                            st.executeUpdate("UPDATE reg_tbl SET  firstname= '"
                                    + userFirstName.getText() + "',middlename= '"
                                    + userMiddleName.getText() + "',lastname='"
                                    + userLastName.getText() + "', address= '"
                                    + userAddress.getText() + "',birthday= '"
                                    + bd + "',mobileno= '"
                                    + userMobile.getText() + "',email = '"
                                    + userEmail.getText() + "',password='"
                                    + userPass.getText()
                                    + "'Where idreg_tbl = '"
                                    + searchID.getText() + "' ");
                            JOptionPane.showMessageDialog(null, "Record Updated", "System Message", JOptionPane.INFORMATION_MESSAGE);
                            resetModFrame();
                            userConfirmpass.setText(null);
                            userConfirmpass.setEnabled(false);
                            confirmPass_label.setEnabled(false);
                            ckbox.setSelected(false);
                            changePass.setSelected(false);
                        }
                    } else {
                        bd  = ((JTextField)birthday.getDateEditor().getUiComponent()).getText();
                        st.executeUpdate("UPDATE reg_tbl SET  firstname= '"
                                + userFirstName.getText() + "',middlename= '"
                                + userMiddleName.getText() + "',lastname='"
                                + userLastName.getText() + "', address= '"
                                + userAddress.getText() + "',birthday= '"
                                + bd + "',mobileno= '"
                                + userAddress.getText() + "',mobileno= '"
                                + userMobile.getText() + "',email = '"
                                + userEmail.getText() + "',password='"
                                + userPass.getText()
                                + "'Where idreg_tbl = '"
                                + searchID.getText() + "' ");
                        JOptionPane.showMessageDialog(null, "Record Updated", "System Message", JOptionPane.INFORMATION_MESSAGE);
                        resetModFrame();
                    }
                }

            } catch (ClassNotFoundException ex) {
                //Logger.getLogger(frameTerminateEdit.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                //Logger.getLogger(frameTerminateEdit.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_update_buttonActionPerformed

    private void ckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckboxActionPerformed
        if (ckbox.isSelected()) {
            userPass.setEchoChar((char) 0);
            userConfirmpass.setEchoChar((char) 0);
        } else {
            userPass.setEchoChar('\u2022');
        }
    }//GEN-LAST:event_ckboxActionPerformed

    private void changePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePassActionPerformed
        if (changePass.isSelected()) {
            userPass.setText("");
            userPass.setEnabled(true);
            userConfirmpass.setEnabled(true);
            confirmPass_label.setEnabled(true);
        } else {
            userPass.setText(ogPass);
            userPass.setEnabled(false);
            userConfirmpass.setEnabled(false);
            confirmPass_label.setEnabled(false);
        }
    }//GEN-LAST:event_changePassActionPerformed

    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
        //search
        // TODO add your handling code here:
        int answer;
        answer = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?", "System Message", JOptionPane.YES_NO_OPTION);
        if (answer == JOptionPane.YES_OPTION) {
            try {
                Connection cn;
                Statement st;
                String url;
                url = "jdbc:mysql://localhost:3306/isdb";
                cn = (Connection) DriverManager.getConnection(url, "root", "1234");
                st = (Statement) cn.createStatement();
                String query;
                query = "Delete From reg_tbl Where idreg_tbl='" + searchID.getText() + "'";
                st.executeUpdate(query);
                JOptionPane.showMessageDialog(null, "Record Deleted", "System Message", JOptionPane.INFORMATION_MESSAGE);
                resetModFrame();

            } catch (SQLException ex) {
            }
        }

    }//GEN-LAST:event_delete_buttonActionPerformed

    private void search_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_buttonActionPerformed
        try {
            pst = con.prepareStatement("select idreg_tbl,firstname,middlename,lastname,address,birthday, mobileno,email, password from reg_tbl where idreg_tbl=? ");
            if (checkID(searchID.getText()) == false) {
                return;
            }
            int id = Integer.parseInt(searchID.getText());
            pst.setInt(1, id);
            ResultSet rs1 = pst.executeQuery();
            if (rs1.next() == false) {
                JOptionPane.showMessageDialog(this, "Sorry Record Not Found");
                searchID.setText("");
            } else {
                searchID.setEnabled(false);
                userFirstName.setText(rs1.getString("firstname"));
                userFirstName.setEnabled(true);
                userMiddleName.setText(rs1.getString("middlename"));
                userMiddleName.setEnabled(true);
                userLastName.setText(rs1.getString("lastname"));
                userLastName.setEnabled(true);
                userAddress.setText(rs1.getString("address"));
                userAddress.setEnabled(true);
                ((JTextField)birthday.getDateEditor().getUiComponent()).setText(rs1.getString("birthday"));
                birthday.setEnabled(true);
                userMobile.setText(rs1.getString("mobileno"));
                userMobile.setEnabled(true);
                userEmail.setText(rs1.getString("email"));
                userEmail.setEnabled(true);
                userPass.setText(rs1.getString("password"));
                ogPass = userPass.getText();
                update_button.setEnabled(true);
                delete_button.setEnabled(true);
                ckbox.setEnabled(true);
                changePass.setEnabled(true);
                search_button.setEnabled(false);
            }

        } catch (SQLException ex) {
            //Logger.getLogger(SearchJdbc.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_search_buttonActionPerformed

    private void search_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_buttonMouseEntered
        if (search_button.isEnabled()) {
            search_button.setBackground(new Color(255, 255, 255));
            search_button.setForeground(new Color(0, 51, 51));
        }
    }//GEN-LAST:event_search_buttonMouseEntered

    private void search_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_buttonMouseExited

            search_button.setBackground(new Color(0, 51, 51));
            search_button.setForeground(new Color(255, 255, 255));


    }//GEN-LAST:event_search_buttonMouseExited

    private void update_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_buttonMouseEntered
        if (update_button.isEnabled()) {
            update_button.setBackground(new Color(255, 255, 255));
            update_button.setForeground(new Color(0, 51, 51));
        }
    }//GEN-LAST:event_update_buttonMouseEntered

    private void update_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_buttonMouseExited

            update_button.setForeground(new Color(255, 255, 255));
            update_button.setBackground(new Color(0, 51, 51));

    }//GEN-LAST:event_update_buttonMouseExited

    private void delete_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete_buttonMouseEntered
        if (delete_button.isEnabled()) {
            delete_button.setBackground(new Color(255, 255, 255));
            delete_button.setForeground(new Color(0, 51, 51));
        }
    }//GEN-LAST:event_delete_buttonMouseEntered

    private void delete_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete_buttonMouseExited

            delete_button.setForeground(new Color(255, 255, 255));
            delete_button.setBackground(new Color(0, 51, 51));

    }//GEN-LAST:event_delete_buttonMouseExited

    private void exit_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_buttonMouseEntered
        exit_button.setBackground(new Color(255, 255, 255));
        exit_button.setForeground(new Color(0, 51, 51));
    }//GEN-LAST:event_exit_buttonMouseEntered

    private void exit_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_buttonMouseExited
        exit_button.setForeground(new Color(255, 255, 255));
        exit_button.setBackground(new Color(0, 51, 51));
    }//GEN-LAST:event_exit_buttonMouseExited

    private void searchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchIDActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser birthday;
    private javax.swing.JCheckBox changePass;
    private javax.swing.JCheckBox ckbox;
    private javax.swing.JLabel confirmPass_label;
    private javax.swing.JButton delete_button;
    private javax.swing.JButton exit_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel login_label;
    private javax.swing.JTextField searchID;
    private javax.swing.JButton search_button;
    private javax.swing.JButton update_button;
    private javax.swing.JTextField userAddress;
    private javax.swing.JPasswordField userConfirmpass;
    private javax.swing.JTextField userEmail;
    private javax.swing.JTextField userFirstName;
    private javax.swing.JTextField userLastName;
    private javax.swing.JTextField userMiddleName;
    private javax.swing.JTextField userMobile;
    private javax.swing.JPasswordField userPass;
    // End of variables declaration//GEN-END:variables
}
